plugins {
//    id "org.flywaydb.flyway" version "4.2.0"
}

ext {
}

dependencies {
    //引入mofc基础模块
    compile("com.ecmp.ch.mofc:mofc-base:$mofc_base_version")
    compile(
            "com.ecmp:core-entity:$ecmp_version",
            "mysql:mysql-connector-java:$mysql_version",
            "org.nutz:nutz-integration-json4excel:$nutz_version",
            "io.springfox:springfox-swagger2:$swagger_version",
            "io.springfox:springfox-swagger-ui:$swagger_version",
            group: 'javax.validation', name: 'validation-api', version: '2.0.1.Final'
    )

    compile("com.ecmp.ch:basic-entity-ch:$basic_version")
    //流程实体
    compile("com.ecmp:flow-entity:$flow_version") {
        transitive(false)
    }
}
configurations.all {
    exclude group: 'com.ecmp', module: 'edm-ecmp-spring-boot-starter'

}
//flyway {
//    driver = "$flyway_driver"
//    url = "$flyway_url"
//    user = "$flyway_user"
//    password = "$flyway_password"
//    //flyway发布版本记录的表名称
//    table = 'flyway_version'
//    //locations = ["filesystem:${projectDir}/db/migration"]
//    //
//    //sqlMigrationPrefix = 'V'
//    // 禁止flywayClean，在生产环境中非常重要
//    cleanDisabled = false
//}

jar {
    manifest {
        attributes("Manifest-Version": "$project.version")
        attributes("Extension-Name": "MOFC-$project.name")
        attributes("Build-Time": new Date().format("yyyy-MM-dd HH:mm:ss"))
    }
}

/////////////////////////////////////上传Maven仓库////////////////////////////////////////
//打包源代码
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives sourcesJar
}

//如果希望gradle install，安装到.m2本地仓库，参考下面的内容
install {
    repositories.mavenInstaller {
        pom.version = "$project.version"
        pom.artifactId = "$project.name"
        pom.groupId = "$project.group"
    }
}

//上传到nexus
uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: MAVEN_REPO_URL) {
                authentication(userName: NEXUS_USERNAME, password: NEXUS_PASSWORD)
            }
            pom.version = "$project.version"
            pom.artifactId = "$project.name"
            pom.groupId = "$project.group"
        }
    }
    return 'Success'
}
